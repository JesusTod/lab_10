# 2. Сформувати функцію для обчислення цифрового кореню натурального числа.
# Цифровий корінь отримується наступним чином: необхідно скласти всі цифри заданого
# числа, потім скласти всі цифри знайденої суми і повторювати процес до тих пір, поки
# сума не буде дорівнювати однозначному числу, що і буде цифровим коренем заданого числа.
# Медуниця Андрій Олексійович | 122г

# Рекурсивний спосіб знаходження цифрового кореня


def root(z):
    if z < 10:                          # якщо задане число стало однозначним, тоді ми його повертаємо
        return z
    return z % 10 + root(z // 10)  # інакше заходимо в рекурсію, та віднімаємо останню цифру


def digital(m):
    if m < 10:                          # якщо задане число є однозначним, тоді повертаємо його
        return m
    return digital(root(m))   # запускаємо рекурсію, яка буде працювати, поки не спрацює одина з 'if' умов


a = int(input('x = '))
print(digital(a))

# Ітераційний спосіб знаходження цифрового кореня

n = int(input('x_2 = '))                # задаємо число
y = 0

while True:                             # поки істина, цикл працює
    y += n % 10                         # додаємо в змінну y останню цифру числа x_2
    n = n//10                           # після чого видаляємо останню останню цифру числа x_2
    if n == 0 and y < 10:               # якщо сума == однозначному числу
        print(y)                        # виводимо на екран це число
        break                           # і перериваємо роботу циклу
    elif n == 0 and y > 9:              # якщо число n стало нулем, а y все одно не однозначне
        n = y                           # тоді n стає y і знову буде покроково обробленне верхнім виразом
        y = 0                           # y стає нулем для того щоб знову в нього додавати цифри
