import timeit
import random
# 3. Сформувати функцію для обчислення індексу максимального елемента масиву
# n*n, де 1<=n<=5
# Медуниця Андрій Олексійович | 122г


# Рекурсивний спосіб знаходження індексу найбільшого елемента

z = int(input('x = '))                 # вводимо кількість елементів
n = 0
k = -1


def ind(x):
    global n, k                        # глобальні n та k
    n = x.pop()                        # видаляємо останній елемент списку, та додаємо його в змінну n
    k += 1                             # допоможе знайти індекс елемента
    if n == mxx:                       # якщо елемент == максимальному елементу в масиві
        print('Максимальний елемент:', n, 'Його індекс:', k)
    else:
        ind(x)                         # в іншому випадку заходимо в рекурсію


M = [random.randint(1, 5) ** 2 for i in range(z)]   # згенерували масив
mxx = max(M)                                        # максимальне значення масиву
print(M)                                            # вивели масив
M.reverse()         # перевернули масив, так як метод .pop() видаляє і повертає останній елемент
ind(M)              # запустили функцію
print(timeit.timeit())
###########################################################################################################################

# В вважаю что в даному випадку доцільніше використовувати рекурсивний метод, читабельність коду краща та не треба заводити зайві змінні
# як в ітераційному способі але із мінусів, рекурсивний спосіб потребує більше пам'яті.

# Ітераційний спосіб знаходження індексу найбільшого елемента

a = int(input('x_2 = '))                 # вводимо кількість елементів
m = []                                   # пустий масив
mmm = 0
ind = 0
for i in range(a):
    m.append(random.randint(1, 5) ** 2)  # рандомно створюємо цифру від 1 до 5, та підносимо до квадрату
    if i == 0:                           # самий перший елемент записується в змінну mmm
        mmm = m[i]
    elif m[i] > mmm:                     # якщо елемент більше за попередній найбільший
        mmm = m[i]                       # тоді зберігаємо його в mmm, для майбутніх зрівнень з іншими
        ind = i                          # зберігаємо його індекс для того, щоб вивести його
print(m)                                 # виводимо масив
print('Індекс:', ind)                           # виводмо індекс найбільшого елемента
print(timeit.timeit())
